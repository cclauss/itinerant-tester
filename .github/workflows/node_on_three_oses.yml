name: node_on_three_oses
on: [workflow_dispatch]
jobs:
  node_on_three_oses:
    strategy:
      fail-fast: false
      max-parallel: 16
      matrix:
        # architecture: [x86, x64]
        node-version: [23]  # [18, 20, 22, 23]
        os: [macos-13, macos-15, macos-latest, ubuntu-latest, ubuntu-24.04-arm, windows-latest, windows-2025]
    runs-on: ${{ matrix.os }}
    steps:
      # - uses: actions/checkout@v4
      - uses: actions/setup-node@v6
        with:
          # architecture: ${{ matrix.architecture }}
          node-version: ${{ matrix.node-version }}
      # Temporary workaround for Node.js v22 on Windows
      # - if: ${{ matrix.node-version == '22' && runner.os == 'Windows' }}
      # - if: matrix.node-version == '22' && runner.os == 'Windows'
      #  shell: bash  # Not pwsh!!!
      #  run: |
      #    npm --version  # 10.5.1
      #    npm install -g npm  # >= https://github.com/npm/cli/releases/tag/v10.7.0
      #    npm --version  # 10.7.0 
      # https://docs.github.com/en/actions/learn-github-actions/contexts#example-printing-context-information-to-the-log
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJson(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - if: runner.os == 'Windows'
        run: vswhere -legacy -latest -property installationPath
      - if: runner.os == 'Windows'
        run: vswhere -latest -property installationPath
  lots_of_nodes:
    strategy:
      fail-fast: false
      max-parallel: 22
      matrix:
        # architecture: [x86, x64]
        node-version: [23.x, 22.x, 21.x, 20.x, 19.x, 18.x, 17.x, 16.x, 15.x, 14.x, 13.x, 12.x, 11.x, 10.x, 9.x, 8.x, 7.x, 6.x, 5.x, 4.x, 0.12, '0.10']
    runs-on: windows-latest
    steps:
      # - uses: actions/checkout@v4
      - name: "Setup Node.js v${{ matrix.node-version }} on ${{ runner.os }} on ${{ runner.arch }}"
        uses: actions/setup-node@v6
        with:
          # architecture: ${{ matrix.architecture }}
          node-version: ${{ matrix.node-version }}
      - name: Check Node.js v${{ matrix.node-version }} on ${{ runner.os }} on ${{ runner.arch }}
        run: node --version
