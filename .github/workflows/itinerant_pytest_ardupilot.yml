name: itinerant_pytest_ardupilot
on:
  workflow_dispatch:
  #  inputs:
  #    repo:
  #      description: 'Repo to test (user_name/repo_name)'
  #      required: true

jobs:
  itinerant_pytest_ardupilot:
    # name: "${{ github.event.inputs.repo }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]  # , "3.14", "pypy-3.11"]  # tkinter!
    runs-on: ubuntu-latest
    steps:
      # - run: echo "Testing ${{ github.event.inputs.repo }}..."
      - uses: actions/checkout@v4
        with:
          # repository: ${{ github.event.inputs.repo }}
          repository: ArduPilot/ardupilot
          submodules: recursive
          # ref: dev  # branch, tag, or SHA
      - uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
            allow-prereleases: true
      - run: tree
      - run: tree modules/mavlink
      - run: pip install --upgrade pip
      - run: pip install numpy pytest setuptools
      # - run: pip install ament-black  # Fails!
      #- run: pip install ament-clang-tidy ament-lint ament-lint-cmake-py
      #                   ament-lint-flake8 ament-lint-pep257 ament-mypy ament-pycodestyle
      #                   ament-style-uncrustify ament-xmllint build dronecan numpy
      #                   pyserial pytest  # pymavlink
      #- run: pip install --editable Tools/autotest/pysim || true
      - run: pip install --editable modules/mavlink/pymavlink
      #- run: python -m build || true
      #- run: pip install --editable . || true
      - name: Download the DroneCAN DSDL Specifications
        run: |
          cd modules/DroneCAN
          git clone https://github.com/DroneCAN/DSDL.git
          ln -s $PWD/DSDL ../
          pip install --editable .
      #- run: python -m pytest --version && pytest --version || true
      - run: pytest --ignore=modules/gtest
                    --ignore=modules/mavlink/pymavlink/generator/C/test/posix/sha256_test.py
                    --ignore=modules/waf/playground
                    --ignore=Tools/autotest/test_build_options.py
                    --ignore=Tools/autotest/test_param_upgrade.py
                    --ignore=Tools/FilterTestTool/run_filter_test.py
                    --ignore=Tools/ros2/ardupilot_dds_tests/test
      # DroneCAN==1.0.26 tests fail on pkg_resources -- Experiment
      - run: pytest --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_common.py
                    --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_load_dsdl.py
                    --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_parser.py
                    --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_signature.py
                    --ignore=modules/DroneCAN/pydronecan/test/test_driver.py
                    --ignore=modules/DroneCAN/pydronecan/test/test_node.py
                    --ignore=modules/DroneCAN/pydronecan/test/test_transport.py
                    --ignore=modules/gtest/googlemock/test/gmock_leak_test.py
                    --ignore=modules/gtest/googlemock/test/gmock_output_test.py
                    --ignore=modules/gtest/googlemock/test/gmock-function-mocker_nc_test.py
                    --ignore=modules/gtest/googlemock/test/pump_test.py
                    --ignore=modules/gtest/googletest/test/gtest_help_test.py
                    --ignore=modules/gtest/googletest/test/gtest_skip_check_output_test.py
                    --ignore=modules/gtest/googletest/test/gtest_skip_environment_check_output_test.py
                    --ignore=modules/gtest/googletest/test/gtest_testbridge_test.py
                    --ignore=modules/gtest/googletest/test/gtest_xml_outfiles_test.py
                    --ignore=modules/mavlink/pymavlink/generator/C/test/posix/sha256_test.py
                    --ignore=modules/waf/playground/genpybind/example_test.py
                    --ignore=modules/waf/playground/pytest/test/test_bar.py
                    --ignore=modules/waf/playground/pytest/test/test_baz.py
                    --ignore=modules/waf/playground/pytest/test/test_foo.py
                    --ignore=Tools/autotest/test_build_options.py
                    --ignore=Tools/autotest/test_param_upgrade.py
                    --ignore=Tools/FilterTestTool/run_filter_test.py
                    --ignore=Tools/ros2/ardupilot_dds_tests/test/ardupilot_dds_tests
                    --ignore=Tools/ros2/ardupilot_dds_tests/test/test_copyright.py
                    --ignore=Tools/ros2/ardupilot_dds_tests/test/test_pep257.py
      # DroneCAN==1.0.26 tests fail on pkg_resources -- Fails!
      #- run: pytest --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_common.py
      #              --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_load_dsdl.py
      #              --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_parser.py
      #              --ignore=modules/DroneCAN/pydronecan/test/dsdl/test_signature.py
      #              --ignore=modules/DroneCAN/pydronecan/test/test_driver.py
      #              --ignore=modules/DroneCAN/pydronecan/test/test_node.py
      #              --ignore=modules/DroneCAN/pydronecan/test/test_transport.py
      #              --ignore=modules/gtest/googlemock/test/gmock_leak_test.py
      #              --ignore=modules/gtest/googlemock/test/gmock_output_test.py
      #              --ignore=modules/gtest/googlemock/test/gmock-function-mocker_nc_test.py
      #              --ignore=modules/gtest/googlemock/test/pump_test.py
      #              --ignore=modules/gtest/googletest/test/gtest_help_test.py
      #              --ignore=modules/gtest/googletest/test/gtest_skip_check_output_test.py
      #              --ignore=modules/gtest/googletest/test/gtest_skip_environment_check_output_test.py
      #              --ignore=modules/gtest/googletest/test/gtest_testbridge_test.py
      #              --ignore=modules/mavlink/pymavlink/generator/C/test/posix/sha256_test.py
      #              --ignore=modules/mavlink/pymavlink/tests/test_mavlogdump.py
      #              --ignore=modules/waf/playground/genpybind/example_test.py
      #              --ignore=modules/waf/playground/pytest/test/test_bar.py
      #              --ignore=modules/waf/playground/pytest/test/test_foo.py
      #              --ignore=Tools/autotest/test_build_options.py
      #              --ignore=Tools/autotest/test_param_upgrade.py
      #              --ignore=Tools/FilterTestTool/run_filter_test.py
      #              --ignore=Tools/ros2/ardupilot_dds_tests/test/ardupilot_dds_tests
      #              --ignore=Tools/ros2/ardupilot_dds_tests/test/test_copyright.py
      - run: echo Fixes? 
                    #--ignore=modules/gtest/googletest/test/gtest_xml_outfiles_test.py
                    #--ignore=modules/mavlink/pymavlink/tests/snapshottests/test_wlua.py
                    #--ignore=modules/mavlink/pymavlink/tests/test_mavxml.py
                    #--ignore=modules/mavlink/pymavlink/tests/test_quaternion.py
                    #--ignore=modules/mavlink/pymavlink/tests/test_rotmat.py
                    #--ignore=modules/mavlink/pymavlink/tests/test_trim.py
                    #--ignore=modules/mavlink/pymavlink/tests/test_wp.py
                    #--ignore=modules/waf/playground/pytest/test/test_baz.py
                    #--ignore=Tools/ros2/ardupilot_dds_tests/test/test_pep257.py
                    #--ignore=Tools/scripts/build_tests/test_ccache.py

      - run: pytest modules/gtest || true
      - run: pytest modules/mavlink || true
      - run: pytest modules/waf || true
      - run: pytest Tools/autotest || true
      - run: pytest Tools/FilterTestTool || true
      - run: pytest Tools/ros2 || true
      - run: echo Done.

  pytest_ardupilot_ros2:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          # repository: ${{ github.event.inputs.repo }}
          repository: ArduPilot/ardupilot
          submodules: recursive
          # ref: dev  # branch, tag, or SHA
      - uses: actions/setup-python@v5
        with:
            python-version: 3.x
            allow-prereleases: true
      - run: sudo apt-get update && sudo apt-get install python3-ament-pep257 python3-ament-copyright
      - run: pip install --upgrade pip
      # - run: pip install ament-black  # Fails!
      # - run: pip install ament-clang-tidy ament-lint ament-lint-cmake-py
      #                   ament-lint-flake8 ament-lint-pep257 ament-mypy ament-pycodestyle
      #                   ament-style-uncrustify ament-xmllint
      - run: pip install pytest
      - run: pytest Tools/ros2
                    --ignore=Tools/ros2/ardupilot_dds_tests/test/ardupilot_dds_tests
                    --ignore=Tools/ros2/ardupilot_dds_tests/test/test_copyright.py
                    --ignore=Tools/ros2/ardupilot_dds_tests/test/test_pep257.py || true
      - run: pytest Tools/ros2/ardupilot_dds_tests/test/test_pep257.py || true
      - run: pip install ament-lint-pep257
      - run: pytest --ignore=Tools Tools/ros2/ardupilot_dds_tests/test/test_pep257.py
