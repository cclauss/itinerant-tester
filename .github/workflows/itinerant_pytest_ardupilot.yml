name: itinerant_pytest_ardupilot
on:
  push:
    paths:
      - '.github/workflows/itinerant_pytest_ardupilot.yml'
      - 'ardupilot_pyproject.toml'
  pull_request:
    paths:
      - '.github/workflows/itinerant_pytest_ardupilot.yml'
      - 'ardupilot_pyproject.toml'
  workflow_dispatch:
jobs:
  itinerant_pytest_ardupilot:
    # name: "${{ github.event.inputs.repo }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]  # , "3.13", "3.14", "pypy-3.11"]  # tkinter!
    runs-on: ubuntu-latest
    steps:
      # - run: echo "Testing ${{ github.event.inputs.repo }}..."
      - uses: actions/checkout@v4
      - run: cp ardupilot_pyproject.toml /tmp
      - uses: actions/checkout@v4
        with:
          # repository: ${{ github.event.inputs.repo }}
          repository: ArduPilot/ardupilot
          submodules: recursive
          # ref: dev  # branch, tag, or SHA
      - run: cat /tmp/ardupilot_pyproject.toml >> pyproject.toml
      - run: cat pyproject.toml
      - uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
            allow-prereleases: true
      - run: pip install --upgrade pip
      - run: pip install MAVProxy mock numpy pexpect pytest requests "setuptools<81"
      - run: pip install --editable modules/DroneCAN/pydronecan
      - run: pip install --editable modules/mavlink/pymavlink
      - run: pip install --editable modules/waf/utils
      - run: |
          cd modules/waf
          python waf-light --tools=buildcopy,genpybind,pytest
          cp waf playground/pytest
          cd playground/pytest
          ./waf configure build --alltests  # pytest passes here on bar, baz, and foo.
      - run: pytest # 158 passed, 7 skipped in 28.95s
      # - run: pip install ament-black  # Fails!
      #- run: pip install ament-clang-tidy ament-lint ament-lint-cmake-py
      #                   ament-lint-flake8 ament-lint-pep257 ament-mypy ament-pycodestyle
      #                   ament-style-uncrustify ament-xmllint build dronecan numpy
      #                   pyserial pytest  # pymavlink
      - run: tree Tools/autotest/pysim
      # - run: pip install --editable Tools/autotest/pysim || true
      - run: pip install --editable Tools/ros2/ardupilot_dds_tests
      - run: pytest  # 158 passed, 7 skipped in 28.95s

      # - run: tree modules/gtest
      - run: pip install --editable modules/gtest || true
      - run: pytest modules/gtest || true
      - run: pip install pyserial && pytest Tools/FilterTestTool || true
      - run: pytest Tools/ros2 || true
      - run: echo Done.

  pytest_ardupilot_ros2:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          # repository: ${{ github.event.inputs.repo }}
          repository: ArduPilot/ardupilot
          submodules: recursive
          # ref: dev  # branch, tag, or SHA
      - uses: actions/setup-python@v5
        with:
            python-version: 3.x
            allow-prereleases: true
      - run: sudo apt-get update && sudo apt-get install python3-ament-pep257 python3-ament-copyright
      - run: pip install --upgrade pip
      # - run: pip install ament-black  # Fails!
      # - run: pip install ament-clang-tidy ament-lint ament-lint-cmake-py
      #                   ament-lint-flake8 ament-lint-pep257 ament-mypy ament-pycodestyle
      #                   ament-style-uncrustify ament-xmllint pyserial
      - run: pip install ament-lint-pep257 pytest
      - run: pip install --editable Tools/ros2/ardupilot_dds_tests
      - run: pytest Tools/ros2 || true
