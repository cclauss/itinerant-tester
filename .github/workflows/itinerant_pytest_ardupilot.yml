name: itinerant_pytest_ardupilot
on:
  push:
    paths:
      - '.github/workflows/itinerant_pytest_ardupilot.yml'
      - 'ardupilot_pyproject.toml'
  pull_request:
    paths:
      - '.github/workflows/itinerant_pytest_ardupilot.yml'
      - 'ardupilot_pyproject.toml'
  workflow_dispatch:
jobs:
  itinerant_pytest_ardupilot:
    # name: "${{ github.event.inputs.repo }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14", "pypy-3.11"]
    runs-on: ubuntu-latest
    steps:
      - if: matrix.python-version == '3.14' || startsWith(matrix.python-version, 'pypy')
        run: sudo apt-get update && sudo apt-get install --yes libxml2-dev libxslt1-dev
      # - run: echo "Testing ${{ github.event.inputs.repo }}..."
      - uses: actions/checkout@v4
      - run: cp ardupilot_pyproject.toml /tmp
      - run: cp ardupilot_and_submodules_pytest.toml /tmp
      - uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
            allow-prereleases: true

      # Test this repo with only the submodule modules/mavlink
      - uses: actions/checkout@v4
        with:
          repository: ArduPilot/ardupilot
          submodules: recursive
      - run: cat /tmp/ardupilot_pyproject.toml >> pyproject.toml
      - run: cp /tmp/ardupilot_and_submodules_pytest.toml .
      - run: cat pyproject.toml
      # - run: ls -l modules
      # COLCON_IGNORE (file)
      # ChibiOS
      # CrashDebug
      # DroneCAN
      # Micro-CDR
      # Micro-XRCE-DDS-Client
      # gbenchmark
      # gsoap
      # gtest
      # littlefs
      # lwip
      # mavlink
      # waf
      - run: pip install --upgrade pip
      - run: pip install MAVProxy mock numpy pexpect pytest requests
      - run: pip install --editable modules/mavlink/pymavlink
      - run: pytest  # 53 passed in 2.41s

      # test_pep257.py has no sense of place so it tests the entire repository!!!
      - name: test Tools/ros2 for pydocstyle compliance with PEP257
        run: |
          pip install ament-lint-pep257
          cd Tools/ros2  # Run test_pep257 only on the Tools/ros2 directory!
          pytest ardupilot_dds_tests/test/test_pep257.py

      - run: pip install "setuptools<81"  # pydronecan still uses pkg_resources
      - run: pip install --editable modules/DroneCAN/pydronecan
      - run: pip install --editable modules/waf/utils
      - name: waf playground/pytest
        if: ${{ !startsWith(matrix.python-version, 'pypy') }}
        run: |
          cd modules/waf
          python waf-light --tools=buildcopy,genpybind,pytest
          cp waf playground/pytest
          cd playground/pytest
          ./waf configure build --alltests  # pytest passes here on bar, baz, and foo.
      - if: ${{ !startsWith(matrix.python-version, 'pypy') }}
        run: pytest --config-file=ardupilot_and_submodules_pytest.toml  # 158 passed, 7 skipped in 28.95s
      # - run: pip install ament-lint-pep257 pyserial
      # - run: pip install ament-black  # Fails!
      #- run: pip install ament-clang-tidy ament-lint ament-lint-cmake-py
      #                   ament-lint-flake8 ament-lint-pep257 ament-mypy ament-pycodestyle
      #                   ament-style-uncrustify ament-xmllint build dronecan numpy
      #                   pyserial pytest  # pymavlink
      # - run: tree Tools/autotest/pysim
      # - run: pip install --editable Tools/autotest/pysim || true
      - run: pip install --editable Tools/ros2/ardupilot_dds_tests
      - if: ${{ !startsWith(matrix.python-version, 'pypy') }}
        run: pytest --config-file=ardupilot_and_submodules_pytest.toml   # 158 passed, 7 skipped in 28.95s

      # - run: tree modules/gbenchmark
      # - run: tree modules/gsoap
      # - run: tree modules/gtest
      - run: pip install --editable modules/gbenchmark || true
      # - run: pip install --editable modules/gsoap || true
      # - run: pip install --editable modules/gtest || true
      - run: rm pyproject.toml
      - run: sudo apt-get update && sudo apt-get install python3-ament-pep257 python3-ament-copyright || true
      - run: pip install ament-lint-pep257 pyserial
      # test_pep257.py has no sense of place so it tests the entire repository.
      # - run: pytest Tools/ros2/ardupilot_dds_tests/test/test_pep257.py || true
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_pep257.py || true
      - run: pytest Tools/ros2/ardupilot_dds_tests || true
      - run: pytest Tools/ros2 || true
      # Does FilterTestTool need tkinter?
      - run: pytest Tools/FilterTestTool || true
      - run: pytest Tools/FilterTestTool/run_filter_test.py || true
      - run: pytest modules/gtest || true
      - run: echo Done.

  pytest_ardupilot_ros2:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ArduPilot/ardupilot
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
            python-version: 3.x
            allow-prereleases: true
      - run: sudo apt-get update && sudo apt-get install python3-ament-pep257 python3-ament-copyright || true
      - run: pip install --upgrade pip
      # - run: pip install ament-black  # Fails!
      # - run: pip install ament-clang-tidy ament-lint ament-lint-cmake-py
      #                   ament-lint-flake8 ament-lint-pep257 ament-mypy ament-pycodestyle
      #                   ament-style-uncrustify ament-xmllint pyserial
      - run: pip install pytest
      # test_pep257.py has no sense of place so it tests the entire repository.
      - run: pip install --editable Tools/ros2/ardupilot_dds_tests
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_copyright.py || true
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_pep257.py || true
      - run: cd Tools/ros2 && pytest || true
      - run: pip install ament-lint-pep257
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_pep257.py

  install-ament-tools:  # http://packages.ros.org
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ArduPilot/ardupilot
          submodules: recursive
      - uses: actions/setup-python@v5
        with:
            python-version: 3.x
            allow-prereleases: true
      - run: pip install --upgrade pip
      - run: pip install pytest
      - run: |
          git clone https://github.com/ament/ament_lint.git
          ls -l ament_lint
          pip install --editable ament_lint/ament_copyright || tree ament_lint/ament_copyright
          pip install --editable ament_lint/ament_pep257 || tree ament_lint/ament_pep257
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_copyright.py || true
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_pep257.py || true
      - run: cd Tools/ros2 && pytest || true
      - run: pip install ament-lint-pep257
      - run: cd Tools/ros2 && pytest ardupilot_dds_tests/test/test_pep257.py

      #- name: Install ament Python tools
      #  run: |
      #    sudo apt install -y \
      #      python3-ament-pep257 \
      #      python3-ament-copyright \
      #      python3-ament-python-index
