name: itinerant_sphinx_autodoc2
on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repo to test (user_name/repo_name)'
        required: true

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  itinerant_sphinx_autodoc2:
    name: "${{ github.event.inputs.repo }}"
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.x]
    runs-on: ubuntu-latest
    steps:
      - run: echo "Testing ${{ github.event.inputs.repo }}..."
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
      - run: cp scripts/sphinx_conf.py /tmp/
      - run: cp scripts/sphinx_index.md /tmp/
      - uses: actions/checkout@v4
        with:
          repository: ${{ github.event.inputs.repo }}
      - run: mkdir itinerant_sphinx_autodoc2
      - run: cp /tmp/sphinx_conf.py itinerant_sphinx_autodoc2/conf.py
      - run: cp /tmp/sphinx_index.md itinerant_sphinx_autodoc2/index.md
      - run: ls -Fla
      - run: pip install --upgrade pip
      - run: pip install --upgrade furo myst_parser sphinxcontrib-mermaid  # sphinx-autodoc2
      - uses: actions/configure-pages@v5
      - run: ls -FlaR itinerant_sphinx_autodoc2
      # - uses: echo -e "# itinerant_sphinx_autodoc2\n\\`\\`\\`{toctree}\n:maxdepth: 2\README.md\n\\`\\`\\`"
      - run: sphinx-build -c itinerant_sphinx_autodoc2 . itinerant_sphinx_autodoc2/_build/html | true
      - uses: actions/upload-pages-artifact@v3
        with:
          path: itinerant_sphinx_autodoc2/_build/html
      - run: echo ${{ github.event_name }} 
      
