# https://github.com/actions/virtual-environments/tree/main/images/macos

name: macOS
on:
  push:
    paths:
      - '.github/workflows/macOS_on_demand.yml'
  pull_request:
    paths:
      - '.github/workflows/macOS_on_demand.yml'
  workflow_dispatch:
jobs:
  macOS:
    strategy:
      fail-fast: false
      matrix:
        os: [macos-26, macos-15, macos-15-intel, macos-14, macos-13, macos-latest]
        # arch: [ARM64, X64]  # macos-13 and macos-15-intel are X64, others are ARM64
    runs-on: ${{ matrix.os }}
    steps:
    - name: ${{ runner.os }} (${{ matrix.os }}) on ${{ runner.arch }}
      run: echo "${{ runner.os }} (${{ matrix.os }}) on ${{ runner.arch }}"
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
      with:
        python-version: 3.x
    - run: sw_vers && uname -a && system_profiler SPSoftwareDataType SPHardwareDataType
    - name: Create ${{ matrix.os }}_cpu.md
      run: |
        echo "| ${{ matrix.os }} | ${{ runner.arch }} |" > ${{ matrix.os }}_cpu.md
    - name: Display ${{ matrix.os }}_cpu.md content
      run: cat ${{ matrix.os }}_cpu.md
    - name: Upload ${{ matrix.os }}_cpu.md artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}_cpu
        path: ${{ matrix.os }}_cpu.md
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
  write_macOS_CPUs_md:
    needs: macOS
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - name: Download all CPU artifacts
      uses: actions/download-artifact@v5
      with:
        pattern: "*_cpu"
        merge-multiple: true
        path: artifacts
    - name: Process and merge CPU files
      shell: python
      run: |
        import os
        import glob
        from pathlib import Path
        
        # Find all *_cpu.md files in artifacts directory
        artifact_files = glob.glob("artifacts/**/*_cpu.md", recursive=True)
        print(f"Found artifact files: {artifact_files}")
        
        # Read all content and collect unique rows
        all_rows = set()
        
        for file_path in artifact_files:
            with open(file_path, 'r') as f:
                content = f.read().strip()
                lines = content.split('\n')
                # Skip header and separator lines, collect data rows
                for line in lines:
                    if line := line.strip():
                        all_rows.add(line)
        
        # Sort rows for consistent output
        sorted_rows = sorted(all_rows)
        
        # Create combined content
        header =    "| macOS Version | runner.arch |"
        separator = "|---------------|-------------|"
        combined_content = f"{header}\n{separator}\n"
        if sorted_rows:
            combined_content += "\n".join(sorted_rows) + "\n"
        
        # Write combined file
        with open("macOS_CPUs_combined.md", 'w') as f:
            f.write(combined_content)
        
        print(f"Combined content:\n{combined_content}")
        
        # Read existing file for comparison
        existing_content = ""
        if os.path.exists("macOS_CPUs.md"):
            with open("macOS_CPUs.md", 'r') as f:
                existing_content = f.read()
        
        print(f"Existing content:\n{existing_content}")
        
        # Compare and update if different
        if combined_content.strip() != existing_content.strip():
            print("Contents differ, updating macOS_CPUs.md")
            with open("macOS_CPUs.md", 'w') as f:
                f.write(combined_content)
        else:
            print("Contents are the same, no update needed")
    - name: Upload combined macOS_CPUs.md
      uses: actions/upload-artifact@v4
      with:
        name: macOS_CPUs_final
        path: |
          macOS_CPUs.md
          macOS_CPUs_combined.md
  pythons_on_macOS_13:
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
      with:
        python-version: |
          3.14
          3.13
          3.12
          3.11
          3.10
          3.9
          3.8
          3.7
        allow-prereleases: true
    - run: |
        python3.7 --version
        python3.8 --version
        python3.9 --version
        python3.10 --version
        python3.11 --version
        python3.12 --version
        python3.13 --version
        python3.14 --version
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"

  pythons_on_macOS_15_intel:
    runs-on: macos-15-intel
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-python@v6
      with:
        python-version: |
          3.14
          3.13
          3.12
          3.11
          3.10
          3.9
          3.8
          3.7
        allow-prereleases: true
    - run: |
        python3.7 --version
        python3.8 --version
        python3.9 --version
        python3.10 --version
        python3.11 --version
        python3.12 --version
        python3.13 --version
        python3.14 --version
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
