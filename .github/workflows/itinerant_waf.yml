name: itinerant_waf
on:
  workflow_dispatch:
jobs:
  itinerant_waf:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ArduPilot/waf
          submodules: recursive
          # ref: dev  # branch, tag, or SHA
      - uses: actions/setup-python@v5
        with:
            python-version: 3.9
      - run: pip install --upgrade pip
      - run: pip install pytest setuptools
      - run: pip install --editable ./utils
      - run: python waf-light --tools=waflib.extras,waflib.extras.buildcopy
      - run: tree build
      - run: cat build/*.log
      - run: |
          cp waf waflib/extras
          cd waflib/extras
          ./waf configure build buildcopy
      #- run: |
      #    cp waf demos/c/
      #    cd demos/c/
      #    ./waf configure build      
      - run: |
          export WAF_EXTRA_TOOL_DIRS=waflib/extras
          cp waf playground/genpybind
          cd playground/genpybind
          pwd
          echo ">>>>> ./waf configure..."
          ./waf configure || true
          echo ">>>>> ./waf build..."
          ./waf build || true
      # - run: ls -l build || true
      - run: cat build/*.log
      - run: tree playground/genpybind
      - run: ls -l playground/genpybind/build || true
      - run: cat playground/genpybind/build/*.log || true

      - run: |
          export WAF_EXTRA_TOOL_DIRS=waflib/extras
          cp waf playground/pytest
          cd playground/pytest
          pwd
          echo ">>>>> ./waf configure..."
          ./waf configure || true
          echo ">>>>> ./waf build bar..."
          ./waf build bar || true
          echo ">>>>> ./waf build baz..."
          ./waf build baz || true
          echo ">>>>> ./waf build foo..."
          ./waf build foo || true
      - run: cat build/*.log
      - run: tree playground/pytest
      - run: ls -l playground/pytest/build || true
      - run: cat playground/pytest/build/*.log || true

      # Demonstrate that pytest can discover test_baz.py, but testing fails.
      - run: pytest --ignore=playground/genpybind/example_test.py
                    --ignore=playground/pytest/test/test_bar.py
                    --ignore=playground/pytest/test/test_foo.py || true
      # Demonstrate that pytest can discover example, bar, and foo, but testing fails.
      - run: pytest
