name: itinerant_waf
on:
  workflow_dispatch:
jobs:
  itinerant_waf:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.x']
    runs-on: ubuntu-latest
    steps:
      - run: sudo apt-get update && sudo apt-get install -y llvm pybind11-dev
      - uses: actions/checkout@v4
        with:
          repository: ArduPilot/waf
          submodules: recursive
          # ref: dev  # branch, tag, or SHA
      - uses: actions/setup-python@v5
        with:
            python-version: ${{ matrix.python-version }}
            allow-prereleases: true
      - run: pip install --upgrade pip
      - run: pip install genpybind pybind11 pytest scikit-build-core setuptools
      - run: pip show genpybind
      - run: which genpybind || echo "genpybind not found in PATH"
      - run: pip install --editable ./utils
      - run: python waf-light --tools=buildcopy,genpybind,pytest
      - run: |
          cp waf playground/pytest
          cd playground/pytest
          ./waf configure build --alltests  # pytest pass here on bar, baz, and foo.

      - run: pip install genpybind
      - run: pip show genpybind
      - run: which genpybind || echo "genpybind not found in PATH"
      - run: |
          cp waf playground/genpybind
          cd playground/genpybind
          echo ">>> ./waf configure"
          ./waf configure
          echo ">>> ./waf build"
          ./waf build
      - run: which genpybind || echo "genpybind not found in PATH"
      # --alltests  # pytest pass here on bar, baz, and foo.
      # When there is a PYTHONPATH, playground/pytest/test/test_bar.py and foo pass, but baz fails.
      - run: PYTHONPATH=playground/pytest/build/src pytest || true
      #         --ignore=playground/genpybind/example_test.py 
      - run: PYTHONPATH=playground/pytest/build/src pytest
               --ignore=playground/genpybind/example_test.py
               --ignore=playground/pytest/test/test_baz.py
